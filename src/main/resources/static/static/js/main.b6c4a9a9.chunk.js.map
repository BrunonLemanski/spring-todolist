{"version":3,"sources":["actions/projectActions.jsx","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTask/ProjectTasks.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagment/Register.js","components/UserManagment/Login.js","securityUtils/SecureRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsUnauthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","startDate","endDate","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","classNames","disabled","_ref3","_callee3","_context3","_x3","ProjectTasks","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTask_ProjectTasks","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","valu","UpdateProjectTask","created_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateTask","updateProjectTaskMethod","patch","Landing","Register","username","fullname","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","SecureRoute","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b6c4a9a9.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\n//funkcja dodająca obiekt do Spring API\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\n//funkcja pobierająca obiekt do Spring API\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\n//funkcja pobierajaca jeden projekt za pomoca id\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (window.confirm(\"Czy na pewno chcesz usunąć projekt?\")) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    //pozyskiwany argument podczas zastosowania komponentu <ProjectItem project={}/>\n    const { project } = this.props;\n\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\">\n                      {\" \"}\n                      Karta projektu{\" \"}\n                    </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\">\n                      {\" \"}\n                      Zaktualizuj dane projektu\n                    </i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Usuń projekt</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Utwórz nowy projekt\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n              {/*wyswietlanie listy obiektow w bazie*/}\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token; //get token from the headers of json\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post action => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n\n    // extract token from the res.data\n    const { token } = res.data;\n\n    // store the token in the locacStorage\n    localStorage.setItem(\"jwtToken\", token);\n\n    // set out token in header ***\n    setJWTToken(token);\n\n    // decode token on React\n    const decoded = jwt_decode(token);\n\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\"); //remove token from the localStorage\n  setJWTToken(false); //remove token from the header\n\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Strona główna\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" /> {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Wyloguj się\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsUnauthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/register\">\n              Dołącz\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Zaloguj się\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsUnauthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            ToDo List Application\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        {\n          //check name attribute input fields\n          //create constructor\n          //set state\n          //set value on input fields\n          //create onChange function\n          //set onChange on each input field\n          //bind on constructor\n          //check state change in the react extension\n        }\n\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Utwórz nowy projekt</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Nazwa projektu\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Identyfikator projektu\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Opis projektu\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n\n                  <h6>Data rozpoczęcia</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.startDate\n                      })}\n                      name=\"startDate\"\n                      value={this.state.startDate}\n                      onChange={this.onChange}\n                    />\n                    {errors.startDate && (\n                      <div className=\"invalid-feedback\">{errors.startDate}</div>\n                    )}\n                  </div>\n\n                  <h6>Termin zakończenia</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.endDate\n                      })}\n                      name=\"endDate\"\n                      value={this.state.endDate}\n                      onChange={this.onChange}\n                    />\n                    {errors.endDate && (\n                      <div className=\"invalid-feedback\">{errors.endDate}</div>\n                    )}\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer, // otherwise, loading information to state will not working\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\n\nclass UpdateProject extends Component {\n  //set state\n  // constructor is required when we want update project | put on forms in view date from the state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Nazwa projektu\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier\n                    })}\n                    placeholder=\"Identyfikator projektu\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classNames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Opis projektu\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Data rozpoczęcia</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classNames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.startDate\n                    })}\n                    name=\"startDate\"\n                    value={this.state.startDate}\n                    onChange={this.onChange}\n                  />\n                  {errors.startDate && (\n                    <div className=\"invalid-feedback\">{errors.startDate}</div>\n                  )}\n                </div>\n                <h6>Termin zakończenia</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classNames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.endDate\n                    })}\n                    name=\"endDate\"\n                    value={this.state.endDate}\n                    onChange={this.onChange}\n                  />\n                  {errors.endDate && (\n                    <div className=\"invalid-feedback\">{errors.endDate}</div>\n                  )}\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTasks extends Component {\n  onDeleteClick = (backlog_id, pt_id) => {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  };\n\n  render() {\n    const { project_task } = this.props;\n\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"alert alert-danger\";\n      priorityString = \"WYSOKI\";\n    } else if (project_task.priority === 2) {\n      priorityClass = \"alert alert-warning\";\n      priorityString = \"ŚREDNI\";\n    } else if (project_task.priority === 3) {\n      priorityClass = \"alert alert-primary\";\n      priorityString = \"NISKI\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priorytet: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            Pokaz / Zaktualizuj\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Usuń\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTasks.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTasks);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTaskMethod = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (window.confirm(\"Czy na pewno chcesz usunąć zadanie?\")) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTasks from \"./ProjectTask/ProjectTasks\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props; //name must be the same as in declaration <Backlog/> in ProjectBoard.js\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTasks key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"DO_WYKONANIA\") {\n        todoItems.push(tasks[i]);\n      } else if (tasks[i].props.project_task.status === \"W_TRAKCIE\") {\n        inProgressItems.push(tasks[i]);\n      } else if (tasks[i].props.project_task.status === \"WYKONANE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>Do wykonania</h3>\n              </div>\n            </div>\n            {\n              //insert tasks here\n            }\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>W trakcie</h3>\n              </div>\n            </div>\n            {\n              //  <!-- SAMPLE PROJECT TASK STARTS HERE -->\n              //         <!-- SAMPLE PROJECT TASK ENDS HERE -->\n            }\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Wykonane</h3>\n              </div>\n            </div>\n            {\n              // <!-- SAMPLE PROJECT TASK STARTS HERE -->\n              // <!-- SAMPLE PROJECT TASK ENDS HERE -->\n            }\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog; // name of const must be the same as in state\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    //algorithm which give information about tasks in project\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        //PROJECT IDENTIFIER BUG\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              Brak zadań dla tego projektu\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Utwórz Zadanie Projektowe</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params; //pobieranie id url\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"add-PBI\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                  Wróc do Karty Projektu\n                </Link>\n                <h4 className=\"display-4 text-center\">\n                  Dodaj zadanie dla projektu {this.state.projectIdentifier}\n                </h4>\n                <p className=\"lead text-center\">Project Name + Project Code</p>\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.summary\n                      })}\n                      name=\"summary\"\n                      placeholder=\"Treść zadania \"\n                      value={this.state.summary}\n                      onChange={this.onChange}\n                    />\n\n                    {errors.summary && (\n                      <div className=\"invalid-feedback\">{errors.summary}</div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Akceptacja\"\n                      name=\"acceptanceCriteria\"\n                      value={this.state.acceptanceCriteria}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Termin wykonania</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"dueDate\"\n                      value={this.state.dueDate}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <select\n                      className=\"form-control form-control-lg\"\n                      name=\"priority\"\n                      valu={this.state.priority}\n                      onChange={this.onChange}\n                    >\n                      <option value={0}>Wybierz priorytet</option>\n                      <option value={1}>Wysoki</option>\n                      <option value={2}>Średni</option>\n                      <option value={3}>Niski</option>\n                    </select>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <select\n                      className=\"form-control form-control-lg\"\n                      name=\"status\"\n                      value={this.state.status}\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">Wybierz status</option>\n                      <option value=\"DO_WYKONANIA\">Do wykonania</option>\n                      <option value=\"W_TRAKCIE\">W trakcie</option>\n                      <option value=\"WYKONANE\">Wykonane</option>\n                    </select>\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport {\n  getProjectTask,\n  updateProjectTaskMethod\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 1,\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      created_At: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      created_At: this.state.created_At\n    };\n\n    this.props.updateProjectTaskMethod(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updateTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <div className=\"add-PBI\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <Link\n                  to={`/projectBoard/${this.state.projectIdentifier}`}\n                  className=\"btn btn-light\"\n                >\n                  Wróc do Karty Projektu\n                </Link>\n                <h4 className=\"display-4 text-center\">\n                  Zaktualizuj zadanie dla projektu{\" \"}\n                  {\n                    //this.state.backlog_id\n                  }\n                </h4>\n                <p className=\"lead text-center\">\n                  Projekt: {this.state.projectIdentifier} + Zadanie:{\" \"}\n                  {this.state.projectSequence}\n                </p>\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.summary\n                      })}\n                      name=\"summary\"\n                      placeholder=\"Treść zadania \"\n                      value={this.state.summary}\n                      onChange={this.onChange}\n                    />\n                    {errors.summary && (\n                      <div className=\"invalid-feedback\">{errors.summary}</div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Akceptacja\"\n                      name=\"acceptanceCriteria\"\n                      value={this.state.acceptanceCriteria}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Termin wykonania</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"dueDate\"\n                      value={this.state.dueDate}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <select\n                      className=\"form-control form-control-lg\"\n                      name=\"priority\"\n                      value={this.state.priority}\n                      onChange={this.onChange}\n                    >\n                      <option value={0}>Wybierz priorytet</option>\n                      <option value={1}>Wysoki</option>\n                      <option value={2}>Średni</option>\n                      <option value={3}>Niski</option>\n                    </select>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <select\n                      className=\"form-control form-control-lg\"\n                      name=\"status\"\n                      value={this.state.status}\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">Wybierz status</option>\n                      <option value=\"DO_WYKONANIA\">Do wykonania</option>\n                      <option value=\"W_TRAKCIE\">W trakcie</option>\n                      <option value=\"WYKONANE\">Wykonane</option>\n                    </select>\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTaskMethod: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTaskMethod }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">ToDo List App</h1>\n                <p className=\"lead\">\n                  Utwórz konto by rozpocząć pracę z ToDo List\n                </p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                  Dołącz\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Zaloguj się\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullname: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullname: this.state.fullname,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Dołącz</h1>\n              <p className=\"lead text-center\">Utwórz nowe konto</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullname\n                    })}\n                    placeholder=\"Imię\"\n                    name=\"fullname\"\n                    value={this.state.fullname}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullname && (\n                    <div className=\"invalid-feedback\">{errors.fullname}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Adres email (nazwa uzytkownika)\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                    name=\"username\"\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Hasło\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Potwierdz hasło\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      //if token is valid redirect to the dashboard with all projects\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Zaloguj się</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Adres email\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Hasło\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security, //state.SECURITY like field in index.js\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTask/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTask/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagment/Register\";\nimport Login from \"./components/UserManagment/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  //if set the token right here, it worked for all places in app, because App.js is main file\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n\n            {\n              //Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}